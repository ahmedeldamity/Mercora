@inject IProductService ProductService

@if (Products is null ||  Products.Count == 0)
{
	<p><em>No products found</em></p>
}
else
{
	<div class="row">
		@foreach (var product in Products)
		{
			<div class="col-xl-3 col-md-4 col-sm-6">
				<div class="card mb-4 shadow-sm">
					<img class="card-img-top media-img" src="@product.ImageCover" alt="@product.Name" style="object-fit: contain; width: 100%; height: 300px;">
					<div class="card-body">
						<p class="card-text text-primary fw-bold">@product.Name</p>
						<p class="card-text" style="height: 115px">@product.Description</p>
						<div class="d-flex justify-content-between align-items-center">
							<div class="btn-group">
								<a type="button" class="btn btn-sm btn-outline-success" href="/product/@product.Id">View</a>
								<button type="button" class="btn btn-sm btn-outline-primary">Add to Cart</button>
							</div>
							<strong class="text-success">@product.Price.ToString("C")</strong>
						</div>
					</div>
				</div>
			</div>
		}
	</div>
}

@code {

	[Parameter] public List<ProductResponse>? Products { get; set; }
}