@page "/resetpassword/start"
@inject IAccountService AccountService
@inject IToastService ToastService

@if (email is null)
{
	<div class="card mx-auto bg-light-subtle rounded-2 shadow-sm p-4 mb-4" style="max-width: 450px;">
		<div class="card-body">
			<EditForm Model="User" OnValidSubmit="ResetPasswordContinue">
				<DataAnnotationsValidator />
				<ValidationSummary class="text-danger" />

				<h2 class="text-center mb-4 fw-bold">Reset Your Password</h2>

				<p class="text-center mb-4">Enter your email, and we'll send you a link to reset your password.</p>
				
				<div class="form-floating my-2">
					<InputText type="email" id="email" class="form-control" @bind-Value="User.Email" placeholder="Enter your email" />
					<label for="email" class="fw-bold">Email</label>
					<ValidationMessage For="@(() => User.Email)" />
				</div>

				<div class="text-center">
					<button type="submit" class="btn btn-primary btn-lg w-100">Send Reset Link</button>
				</div>
			</EditForm>
		</div>
	</div>
}
else
{
	<div class="text-center my-5 mx-auto p-3 bg-light-subtle shadow-sm rounded-2" style="max-width: 450px">
		<div class="mb-3">
			<i class="bi bi-envelope-check-fill fs-1 text-primary"></i>
		</div>

		<h2 class="mb-1 fw-bold text-black">Check Your Email</h2>
		<p class="fs-5 my-4 text-muted">Please check the email address for instructions to reset your password.</p>

		<button class="btn btn-primary w-100 fw-bold py-3" @onclick="ResetPasswordContinue">Resend email</button>
	</div>
}

@code {

	public ResetPasswordRequest User = new();

	private string? email;

	void ResetPasswordContinue()
	{
		email = User.Email;

		ToastService.ShowSuccess("Email sent successfully!.");
		
		AccountService.SendResetPasswordCode(User);
	}

}